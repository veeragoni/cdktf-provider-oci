const { ConstructLibraryCdktf } = require('projen/lib/cdktf');
const { NpmAccess } = require('projen/lib/javascript');

const project = new ConstructLibraryCdktf({
  defaultReleaseBranch: 'main',
  name: '@cdktf/provider-oci',
  description: 'CDKTF bindings for Oracle Cloud Infrastructure',
  repositoryUrl: 'https://github.com/veeragoni/cdktf-provider-oci.git',

  author: 'Suresh Veeragoni',
  authorAddress: 'github@veeragoni.com',
  npmAccess: NpmAccess.PUBLIC,
  releaseToNpm: true,

  cdktfVersion: '^0.20.0 || ^0.21.0',
  constructsVersion: '^10.0.0',
  jsiiVersion: '^5.0.0',

  deps: ['cdktf', 'constructs'],
  peerDeps: ['cdktf', 'constructs'],

  // Enable GitHub workflows
  github: true,
  githubOptions: {
    pullRequestLintOptions: {
      semanticTitleOptions: {
        types: ['feat', 'fix', 'chore', 'docs', 'style', 'refactor', 'perf', 'test', 'build', 'ci'],
      },
    },
  },

  // Auto-approve and merge dependabot PRs
  autoApproveOptions: {
    allowedUsernames: ['dependabot[bot]'],
  },

  // Release configuration
  release: true,
  releaseWorkflow: true,
  majorVersion: 0,

  publishToPypi: {
    distName: 'cdktf-provider-oci',
    module: 'cdktf_provider_oci',
  },

  // Add package.json keywords for better discoverability
  keywords: [
    'cdk',
    'cdktf',
    'terraform',
    'oracle',
    'oci',
    'oracle-cloud',
    'oracle-cloud-infrastructure',
    'provider',
  ],

  // Gitignore configuration
  gitignore: [
    '*.log',
    '*.pid',
    '*.seed',
    '*.pid.lock',
    '.DS_Store',
    '*.swp',
    '*.swo',
    '*~',
    '.idea/',
    '.vscode/',
    '*.iml',
    '.history/',
    '.env',
    '.env.local',
    '.env.*.local',
    'terraform.tfstate',
    'terraform.tfstate.*',
    '.terraform/',
    '*.tfvars',
    'override.tf',
    'override.tf.json',
    '*_override.tf',
    '*_override.tf.json',
    '.terraformrc',
    'terraform.rc',
    'crash.log',
    'crash.*.log',
    '.gen/',
    'cdktf.out/',
    'cdktf.log',
    '.cdktf/',
    '.claude/',
    'imported/',
    'imports/',
    '!imports/*.ts',
    'cdk.out/',
    'cdk.context.json',
    'package-lock.json',
    'yarn-error.log',
    'lerna-debug.log*',
    '.npm/',
    '.yarn-integrity',
    '.cache/',
    '.parcel-cache/',
    '.next/',
    '.nuxt/',
    '.docusaurus/',
    '.serverless/',
    '.fusebox/',
    '.dynamodb/',
    '.tern-port',
    '.venv/',
    'venv/',
    'ENV/',
    'env.bak/',
    'venv.bak/',
    '__pycache__/',
    '*.py[cod]',
    '*$py.class',
    '*.so',
    '.Python',
    'pip-log.txt',
    'pip-delete-this-directory.txt',
    '.pytest_cache/',
    '.coverage',
    '.coverage.*',
    'htmlcov/',
    '.tox/',
    '*.cover',
    '.hypothesis/',
    '*.egg-info/',
    '.installed.cfg',
    '*.egg',
    'MANIFEST',
    'wheels/',
    'share/python-wheels/',
    'instance/',
    '.webassets-cache',
    '.scrapy',
    'target/',
    '.ipynb_checkpoints',
    '.python-version',
    '.mypy_cache/',
    '.dmypy.json',
    'dmypy.json',
    '.pyre/',
    '.pytype/',
  ],
});

project.synth();